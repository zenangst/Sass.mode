<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "syntax.dtd">
<syntax>
	<head>
		<name>Sass</name>
		<!-- The definitions title -->
        <charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-@$]]></charsintokens>
        <charsincompletion><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-@$]]></charsincompletion>
    </head>
	<states>
		<default id="Base" usesymbolsfrommode="Sass" useautocompletefrommode="CSS" scope="meta.default">
			
			<state-link state="CSS Functions" mode="CSS" />
			<state-link state="Type Selectors" mode="CSS" />
			<import mode="CSS" state="Digits and Colors" keywords-only="yes" />
			<import mode="CSS" keywords-only="yes"/>
					
			<keywords id="Illegals" casesensitive="no" useforautocomplete="yes" scope="style.at-rule">
				<regex>:([A-z_0-9]+)</regex>
				<regex>({|}|;)</regex>
			</keywords>
			
			
			<keywords id="CSS Keywords" useforautocomplete="yes" casesensitive="no" scope="style.property.name">
				<regex>([A-z_\-]+):\s</regex>
			</keywords>
			
			<keywords id="CSS Attributes" useforautocomplete="yes" casesensitive="no" scope="style.value.keyword">
       			<string>above</string>
				<string>absolute</string>
				<string>accumulate</string>
				<string>activeborder</string>
				<string>activecaption</string>
				<string>after-edge</string>
				<string>after-white-space</string>
				<string>ahead</string>
				<string>alias</string>
				<string>aliceblue</string>
				<string>all-scroll</string>
				<string>all</string>
				<string>alphabetic</string>
				<string>alternate</string>
				<string>always</string>
				<string>antialiased</string>
				<string>antiquewhite</string>
				<string>appworkspace</string>
				<string>aqua</string>
				<string>aquamarine</string>
				<string>arial</string>
				<string>armenian</string>
				<string>aspect-ratio</string>
				<string>auto</string>
				<string>avoid</string>
				<string>azure</string>
				<string>backwards</string>
				<string>balance</string>
				<string>baseline</string>
				<string>before-edge</string>
				<string>beige</string>
				<string>below</string>
				<string>bicubic</string>
				<string>bidi-override</string>
				<string>bisque</string>
				<string>black</string>
				<string>blanchedalmond</string>
				<string>blink</string>
				<string>block</string>
				<string>bold</string>
				<string>bolder</string>
				<string>both</string>
				<string>box</string>
				<string>box-shadow</string>
				<string>break-all</string>
				<string>break-strict</string>
				<string>break-word</string>
				<string>break</string>
				<string>brown</string>
				<string>burlywood</string>
				<string>butt</string>
				<string>button-bevel</string>
				<string>buttonface</string>
				<string>buttonhighlight</string>
				<string>buttonshadow</string>
				<string>buttontext</string>
				<string>capitalize</string>
				<string>capitals</string>
				<string>caps-height</string>
				<string>caption</string>
				<string>captiontext</string>
				<string>caret</string>
				<string>cell</string>
				<string>center</string>
				<string>central</string>
				<string>charcoal</string>
				<string>chartreuse</string>
				<string>checkbox</string>
				<string>chicago</string>
				<string>chocolate</string>
				<string>circle</string>
				<string>cjk-ideographic</string>
				<string>clip</string>
				<string>close-quote</string>
				<string>closest-side</string>
				<string>closest-corner</string>
				<string>cmyk</string>					
				<string>col-resize</string>
				<string>collapse</string>
				<string>collapsed</string>
				<string>color-index</string>
				<string>color-stop</string>
				<string>compact</string>
				<string>condensed</string>
				<string>contain</string>
				<string>content-box</string>
				<string>context-menu</string>
				<string>copy</string>
				<string>cornsilk</string>
				<string>courier</string>
				<string>cover</string>
				<string>crimson</string>
				<string>crispEdges</string>
				<string>crisp-edges</string>
				<string>crop</string>
				<string>cross</string>
				<string>crosshair</string>
				<string>cubic-bezier</string>
				<string>currentcolor</string>
				<string>cursive</string>
				<string>cyan</string>
				<string>dark</string>
				<string>darkblue</string>
				<string>darkcyan</string>
				<string>darkgoldenrod</string>
				<string>darkgray</string>
				<string>darkgreen</string>
				<string>darkgrey</string>
				<string>darkkhaki</string>
				<string>darkmagenta</string>
				<string>darkolivegreen</string>
				<string>darkorange</string>
				<string>darkorchid</string>
				<string>darkred</string>
				<string>darksalmon</string>
				<string>darkseagreen</string>
				<string>darkslateblue</string>
				<string>darkslategray</string>
				<string>darkslategrey</string>
				<string>darkturquoise</string>
				<string>darkviolet</string>
				<string>dashed</string>
				<string>decimal-leading-zero</string>
				<string>decimal</string>
				<string>deeppink</string>
				<string>deepskyblue</string>
				<string>default</string>
				<string>destination-atop</string>
				<string>destination-in</string>
				<string>destination-out</string>
				<string>destination-over</string>
				<string>device-aspect-ratio</string>
				<string>device-cmyk</string>
				<string>device-width</string>
				<string>device-height</string>
				<string>dimgray</string>
				<string>dimgrey</string>
				<string>disc</string>
				<string>discard</string>
				<string>dodgerblue</string>
				<string>dotted</string>
				<string>double</string>
				<string>down</string>
				<string>e-resize</string>
				<string>ease</string>
				<regex>(?&lt;![\d\w.\-#@:\$])(ease-[\w-]+)</regex>
				<string>element</string>
				<string>ellipse cover</string>
				<string>ellipsis</string>
				<string>embed</string>
				<string>end</string>
				<string>evenodd</string>
				<string>ew-reize</string>
				<string>expanded</string>
				<string>extra-condensed</string>
				<string>extra-expanded</string>
				<string>fantasy</string>
				<string>farthest-side</string>
				<string>farthest-corner</string>
				<string>fast</string>
				<string>fill</string>
				<string>firebrick</string>
				<string>fixed</string>
				<string>fixedsys</string>
				<string>flat</string>
				<string>flex</string>
				<string>flex-box</string>
				<string>floralwhite</string>
				<string>forestgreen</string>
				<string>format</string>
				<string>forwards</string>
				<string>from</string>
				<string>fuchsia</string>
				<string>gadget</string>
				<string>gainsboro</string>
				<string>geneva</string>
				<string>geometricPrecision</string>
				<string>georgia</string>
				<string>georgian</string>
				<string>ghostwhite</string>
				<string>gold</string>
				<string>goldenrod</string>
				<string>gray</string>
				<string>graytext</string>
				<string>green</string>
				<string>greenyellow</string>
				<string>grey</string>
				<string>grid</string>
				<string>groove</string>
				<string>hand</string>
				<string>hanging</string>
				<string>hebrew</string>
				<string>help</string>
				<string>helvetica</string>
				<string>hidden</string>
				<string>hide</string>
				<string>higher</string>
				<string>highlight</string>
				<string>highlighttext</string>
				<string>hiragana-iroha</string>
				<string>hiragana</string>
				<string>honeydew</string>
				<string>horizontal</string>
				<string>hotpink</string>
				<string>hsl</string>
				<string>hsla</string>
				<string>icon</string>
				<string>ideographic</string>
				<string>ignore</string>
				<string>impact</string>
				<string>inactiveborder</string>
				<string>inactivecaption</string>
				<string>inactivecaptiontext</string>
				<string>indianred</string>
				<string>indigo</string>
				<string>infinite</string>
				<string>infobackground</string>
				<string>infotext</string>
				<string>inherit</string>
				<string>inline</string>
				<regex>(?&lt;![\d\w.\-#@:\$])(inline-\w+)</regex>
				<string>inset</string>
				<string>inside</string>
				<string>intrinsic</string>
				<string>invert</string>
				<string>italic</string>
				<string>ivory</string>
				<string>justify</string>
				<string>katakana-iroha</string>
				<string>katakana</string>
				<string>keep-all</string>
				<string>khaki</string>
				<string>konq-center</string>
				<string>landscape</string>
				<string>large</string>
				<string>larger</string>
				<string>lavender</string>
				<string>lavenderblush</string>
				<string>lawngreen</string>
				<string>lemonchiffon</string>
				<string>letter-spacing</string>
				<string>level</string>
				<string>light</string>
				<string>lightblue</string>
				<string>lightcoral</string>
				<string>lightcyan</string>
				<string>lighter</string>
				<string>lightgoldenrodyellow</string>
				<string>lightgray</string>
				<string>lightgreen</string>
				<string>lightgrey</string>
				<string>lightpink</string>
				<string>lightsalmon</string>
				<string>lightseagreen</string>
				<string>lightskyblue</string>
				<string>lightslategray</string>
				<string>lightslategrey</string>
				<string>lightsteelblue</string>
				<string>lightyellow</string>
				<string>lime</string>
				<string>limegreen</string>
				<string>line-through</string>
				<string>linear</string>
				<string>linearRGB</string>
				<string>linear-gradient</string>
				<string>linen</string>
				<string>lines</string>
				<string>list-item</string>
				<string>listbox</string>
				<string>listitem</string>
				<string>local</string>
				<string>logical</string>
				<string>loose</string>
				<string>loud</string>
				<string>lower-alpha</string>
				<string>lower-greek</string>
				<string>lower-latin</string>
				<string>lower-roman</string>
				<string>lower</string>
				<string>lowercase</string>
				<string>ltr</string>
				<string>lr</string>
				<string>lr-tb</string>
				<string>magenta</string>
				<string>marker</string>
				<string>maroon</string>
				<string>match</string>
				<string>mathematical</string>
				<string>matrix</string>
				<string>matrix3d</string>
				<string>max-resolution</string>
				<string>medium</string>
				<string>mediumaquamarine</string>
				<string>mediumblue</string>
				<string>mediumorchid</string>
				<string>mediumpurple</string>
				<string>mediumseagreen</string>
				<string>mediumslateblue</string>
				<string>mediumspringgreen</string>
				<string>mediumturquoise</string>
				<string>mediumvioletred</string>
				<string>menu</string>
				<string>menulist-button</string>
				<string>menulist-text</string>
				<string>menulist-textfield</string>
				<string>menulist</string>
				<string>menutext</string>
				<string>message-box</string>
				<string>middle</string>
				<string>midnightblue</string>
				<string>min-intrinsic</string>
				<string>min-resolution</string>
				<string>mintcream</string>
				<string>mistyrose</string>
				<string>miter</string>
				<string>mix</string>
				<string>moccasin</string>
				<string>monaco</string>
				<string>monochrome</string>
				<string>monospace</string>
				<string>move</string>
				<string>n-resize</string>
				<string>narrower</string>
				<string>navajowhite</string>
				<string>navy</string>
				<string>ne-resize</string>
				<string>nearest-neighbor</string>
				<string>nesw-resize</string>
				<string>new</string>
				<string>never</string>
				<string>no-change</string>
				<string>no-close-quote</string>
				<string>no-drop</string>
				<string>no-open-quote</string>
				<string>no-repeat</string>
				<string>none</string>
				<string>nonzero</string>
				<string>normal</string>
				<string>not-allowed</string>
				<string>nowrap</string>
				<string>ns-resize</string>
				<string>nw-resize</string>
				<string>nwse-resize</string>
				<string>oblique</string>
				<string>oldlace</string>
				<string>olive</string>
				<string>olivedrab</string>
				<string>open-quote</string>
				<string>optimizelegibility</string>
				<string>optimizeSpeed</string>
				<string>optimizeQuality</string>
				<string>orange</string>
				<string>orangered</string>
				<string>orchid</string>
				<string>orientation</string>
				<string>outset</string>
				<string>outside</string>
				<regex>(?&lt;![\d\w.\-#@:\$])(o(?:utline)-\w+)</regex>
				<string>overlay</string>
				<string>overline</string>
				<string>painted</string>
				<string>palatino</string>
				<string>palegoldenrod</string>
				<string>palegreen</string>
				<string>paleturquoise</string>
				<string>palevioletred</string>
				<string>papayawhip</string>
				<string>paused</string>
				<string>peachpuff</string>
				<string>peru</string>
				<string>pink</string>
				<string>pixelated</string>
				<string>plum</string>
				<string>plus-darker</string>
				<string>plus-lighter</string>
				<string>pointer</string>
				<string>portrait</string>
				<string>powderblue</string>
				<string>pre</string>
				<string>pre-line</string>
				<string>pre-wrap</string>
				<string>preserve-3d</string>
				<string>progress</string>
				<string>purple</string>
				<string>push-button</string>
				<string>radial</string>
				<string>radial-gradient</string>
				<string>radio</string>
				<string>read-only</string>
				<string>read-write-plaintext-only</string>
				<string>read-write</string>
				<string>red</string>
				<string>relative</string>
				<string>repeat-x</string>
				<string>repeat-y</string>
				<string>repeat</string>
				<string>repeating-linear-gradient</string>
				<string>repeating-radial-gradient</string>
				<string>reset-size</string>
				<string>resolution</string>
				<string>reverse</string>
				<string>rgb</string>
				<string>rgba</string>
				<string>ridge</string>
				<string>right</string>
				<string>rl</string>
				<string>rl-tb</string>
				<string>rosybrown</string>
				<string>rotate</string>
				<string>rotate3d</string>
				<string>rotatex</string>
				<string>rotatey</string>
				<string>rotatez</string>
				<string>round</string>
				<string>row-resize</string>
				<string>royalblue</string>
				<string>rtl</string>
				<string>run-in</string>
				<string>running</string>
				<string>s-resize</string>
				<string>saddlebrown</string>
				<string>salmon</string>
				<string>sand</string>
				<string>sandybrown</string>
				<string>sans-serif</string>
				<string>scale</string>
				<string>scale3d</string>
				<string>scalex</string>
				<string>scaley</string>
				<string>scalez</string>
				<string>scan</string>
				<string>scroll</string>
				<string>scrollbar</string>
				<string>scrollbarbutton-down</string>
				<string>scrollbarbutton-left</string>
				<string>scrollbarbutton-right</string>
				<string>scrollbarbutton-up</string>
				<string>scrollbargripper-horizontal</string>
				<string>scrollbargripper-vertical</string>
				<string>scrollbarthumb-horizontal</string>
				<string>scrollbarthumb-vertical</string>
				<string>scrollbartrack-horizontal</string>
				<string>scrollbartrack-vertical</string>
				<string>se-resize</string>
				<string>seagreen</string>
				<string>searchfield-cancel-button</string>
				<string>searchfield-decoration</string>
				<string>searchfield-results-button</string>
				<string>searchfield-results-decoration</string>
				<string>searchfield</string>
				<string>seashell</string>
				<string>semi-condensed</string>
				<string>semi-expanded</string>
				<string>separate</string>
				<string>serif</string>
				<string>show</string>
				<string>sienna</string>
				<string>silver</string>
				<string>skew</string>
				<string>skewx</string>
				<string>skewy</string>
				<string>skewz</string>
				<string>skia</string>
				<string>skyblue</string>
				<string>slateblue</string>
				<string>slategray</string>
				<string>slategrey</string>
				<string>slider-horizontal</string>
				<string>slider-vertical</string>
				<string>sliderthumb-horizontal</string>
				<string>sliderthumb-vertical</string>
				<string>slow</string>
				<string>small-caps</string>
				<string>small-caption</string>
				<string>small</string>
				<string>smaller</string>
				<string>snow</string>
				<string>solid</string>
				<string>source-atop</string>
				<string>source-in</string>
				<string>source-out</string>
				<string>source-over</string>
				<string>space</string>
				<string>springgreen</string>
				<string>square-button</string>
				<string>square</string>
				<string>sRGB</string>
				<string>start</string>
				<string>static-position</string>
				<string>static</string>
				<string>status-bar</string>
				<string>steelblue</string>
				<string>stretch</string>
				<string>stroke</string>
				<string>sub</string>
				<string>super</string>
				<string>sw-resize</string>
				<string>system</string>
				<string>table-caption</string>
				<string>table-cell</string>
				<string>table-column-group</string>
				<string>table-column</string>
				<string>table-footer-group</string>
				<string>table-header-group</string>
				<string>table-row-group</string>
				<string>table-row</string>
				<string>table</string>
				<string>tahoma</string>
				<string>tan</string>
				<string>tb</string>
				<string>teal</string>
				<string>techno</string>
				<string>terminal</string>
				<string>textarea</string>
				<string>textfield</string>
				<string>textile</string>
				<string>thick</string>
				<string>thin</string>
				<string>thistle</string>
				<string>threeddarkshadow</string>
				<string>threedface</string>
				<string>threedhighlight</string>
				<string>threedlightshadow</string>
				<string>threedshadow</string>
				<string>times</string>
				<string>to</string>
				<string>tomato</string>
				<string>translate</string>
				<string>translate3d</string>
				<string>translatex</string>
				<string>translatey</string>
				<string>translatez</string>
				<string>transparent</string>
				<string>turquoise</string>
				<string>ultra-condensed</string>
				<string>ultra-expanded</string>
				<string>underline</string>
				<string>up</string>
				<string>upper-alpha</string>
				<string>upper-latin</string>
				<string>upper-roman</string>
				<string>uppercase</string>
				<string>url</string>
				<string>use-script</string>
				<string>verdana</string>
				<regex>(?&lt;![\d\w.\-#@:\$])(vertical(?:[-\w])*)</regex>
				<string>violet</string>
				<string>visible</string>
				<regex>(?&lt;![\d\w.\-#@:\$])(visible-\w+)</regex>
				<string>visibility</string>
				<string>visual</string>
				<string>w-resize</string>
				<string>wait</string>
				<string>wheat</string>
				<string>white</string>
				<string>whitesmoke</string>
				<string>wider</string>
				<string>window</string>
				<string>windowframe</string>
				<string>windowtext</string>
				<string>word-spacing</string>
				<string>x-large</string>
				<string>x-small</string>
				<string>xor</string>
				<string>xx-large</string>
				<string>xx-small</string>
				<string>yellow</string>
				<string>yellowgreen</string>
			</keywords>
			
		    <keywords id="Functions" useforautocomplete="no" scope="language.function">
				<regex>([A-Za-z0-9_-]+) *\(</regex>
			</keywords>
			
			<keywords id="Number Literals" useforautocomplete="yes" casesensitive="no" scope="constant.numeric.keyword">
				<string>true</string>
				<string>false</string>
			</keywords>
			<!--
			<keywords id="Operators" useforautocomplete="no" scope="language.operator">
				<regex>([\+\-\*\\\=\|\!])</regex>
				<regex>(\&lt;)(?![\?])</regex>
				<regex>(?&lt;!\?)(\&gt;)</regex>
				<regex>(\/)</regex>
			</keywords>
			-->
			<keywords id="Control Keywords" useforautocomplete="yes" scope="keyword.control">
        		<string>and</string>
        		<string>or</string>
        		<string>not</string>
        		<string>from</string>
        		<string>to</string>
        		<string>in</string>
            </keywords>

			<keywords id="!" useforautocomplete="no" casesensitive="no" scope="meta.important" highlightInOrder="yes">
                 <regex>(!\s*optional)</regex>
                 <regex>(!\s*default)</regex>
            </keywords>
                    
            <keywords id="Keywords" useforautocomplete="yes" casesensitive="no" scope="style.value.keyword">
                <string>through</string>
                <string>null</string>
            </keywords>

			<!-- top level strings -->
            <state-link state="String" mode="CSS"/>
            <state-link state="SingleString" mode="CSS"/>

			<keywords id="SCSS Rule Keywords" casesensitive="no" useforautocomplete="yes" scope="style.at-rule">
				<string>@imported</string>
				<string>@extend</string>
				<string>@debug</string>
				<string>@warn</string>
				<string>@if</string>
				<regex>(@else\s+if)\b</regex>
				<string>@else</string>
				<string>@for</string>
				<string>@each</string>
				<string>@while</string>
				<string>@mixin</string>
				<string>@include</string>
				<string>@function</string>
				<string>@return</string>
				<string>@content</string>
			</keywords>	
			
			<!-- gets us attribute state highlighting behind variables -->
			<state id="Variable Attribute state" scope="meta.block.attribute">
				<begin>
					<regex>\$[\d\w\-]+:</regex>
				</begin>
				<end>
					<regex>(;|(?'unwindend'[{}\(\)]))</regex>
				</end>
				
				<import mode="CSS" state="Attribute state" />     			
				<import keywords-only="yes" />	
				<state-link state="SingleComment" />
				<state-link state="Comment" />
				<import mode="CSS" state="Digits and Colors" keywords-only="yes" />

            </state>
			
			<keywords id="Variables" useforautocomplete="no" scope="language.variable.sass" highlightInOrder="yes">
				<regex>(\$[\d\w\-]+)</regex>
			</keywords>
			
			<keywords id="Sass functions" useforautocomplete="yes" casesensitive="no" postregex="(?:\s*\()" scope="support.function.sass">
				<!-- Color Functions -->
				<string>rgba</string>
				<string>rgb</string>
				<string>red</string>
				<string>green</string>
				<string>blue</string>
				<string>mix</string>
				<string>hsla</string>
				<string>hsl</string>
				<string>hue</string>
				<string>saturation</string>
				<string>lightness</string>
				<string>adjust-hue</string>
				<string>lighten</string>
				<string>darken</string>
				<string>saturate</string>
				<string>desaturate</string>
				<string>grayscale</string>
				<string>complement</string>
				<string>invert</string>
				
				<!-- Opacity Functions -->
				<string>alpha</string>
				<string>opacity</string>
				<string>opacify</string>
				<string>fade-in</string>
				<string>transparentize</string>
				<string>fade-out</string>
				
				<!-- Other Color Functions -->
				<string>adjust-color</string>
				<string>scale-color</string>
				<string>color-change</string>
				<string>ie-hex-str</string>
				
				<!-- String Functions -->
				<string>qoute</string>
				<string>unquote</string>

				<!-- Numbers Functions -->
				<string>percentage</string>
				<string>round</string>
				<string>ceil</string>
				<string>floor</string>
				<string>abs</string>
				<string>min</string>
				<string>max</string>
				
				<!-- Introspect Functions -->
				<string>type-of</string>
				<string>unit</string>
				<string>unitless</string>
				<string>comparable</string>
				
				<!-- List Functions -->
				<string>nth</string>
				<string>length</string>
				<string>join</string>
				<string>append</string>
				<string>zip</string>
				<string>index</string>
				
				<!-- Miscellaneous Functions -->
				<string>if</string>
				
			</keywords>
			
			<state id="Comment Group" foldable="yes" indent="no" delimiterState="Comment" scope="meta.default">
       			<begin><regex>/\*[ \t]*(?i)@group[ \t]+.*?\*/</regex></begin>
       			<end><regex>/\*[ \t]*(?i)@end[ \t]*\*/</regex></end>
       			
				<import mode="CSS" state="Digits and Colors" keywords-only="yes" />
				<import mode="CSS" keywords-only="yes"/>			

       			<import />
       		</state>
			
			<state id="Comment" type="comment" foldable="yes" scope="style.comment.block">
                <begin>
                    <string>/\*</string>
                    <autoend>\*/</autoend>
                </begin>
                <end>
                    <regex>\*/</regex>
                </end>
                
                <import mode="Base" state="EmailAndURLContainerState" keywords-only="yes"/>
            </state>
			
			<state-link state="AutodocComment" mode="CSS" />
            
			<state id="SingleComment" type="comment" scope="style.comment.block">
				<begin><regex>(?://)</regex></begin>
				<end><regex>(?:[\n\r])</regex></end>
			</state>
					
		  	<state id="Inside curly brackets" foldable="yes" indent="yes" scope="meta.block.curly">
                <begin>
                    <string>{</string>
                    <autoend>}</autoend>
                </begin>
                <end>
                    <regex>}</regex>
                </end>
                
                	<state-link state="AutodocComment" mode="CSS" />
					<state-link state="Comment" />
					<state-link state="SingleString" mode="CSS" />
					<state-link state="Type Selectors" mode="CSS" />
	       			<import mode="CSS" state="Digits and Colors" keywords-only="yes" />
					<import mode="CSS" keywords-only="yes"/>

					<state id="SingleComment in Curly" type="comment" scope="style.comment.block">
						<begin><regex>(?://)</regex></begin>
						<!-- <end><regex>(?:[\n\r]|(?'unwindend'}))</regex></end> #20639-->
						<end><regex>(?:[\n\r])</regex></end>
					</state>
					
                	<state id="String" type="string" scope="style.value.string.double">
						<begin>
							<string>"</string>
						</begin>
						<end>
							<regex>(((?&lt;!\\)(\\\\)*)|^)"</regex>
						</end>
						
						<keywords id="Variables" useforautocomplete="no" scope="language.variable.sass">
							<regex>(\$[\d\w\-]+)</regex>
						</keywords>						
					</state>
							
       			<keywords id="Placeholder Selectors" useforautocomplete="no" scope="language.variable.placeholder" highlightInOrder="yes">
					<regex>(%[\d\w\-]+)</regex>
				</keywords>
       			
       			<!-- incomplete -->
       			<keywords id="Nested Properties" casesensitive="no" scope="style.property.name">
					<regex>(?&lt;![\d\w.\-#@:\$])(family|style|weight|size)</regex>
       			</keywords>
				
				<import mode="CSS" state="Inside curly brackets" keywords-only="yes" />
				<state id="Attribute state" scope="meta.block.attribute">
					<begin>
						<regex>:(?i)(?!(?:link|visited|active|hover|focus|first-|before|after|lang|last-|only-|nth-|root|empty|target|enabled|disabled|checked|not|:))</regex>
					</begin>
					<end>
						<regex>(;|(?'unwindend'[{}]))</regex>
					</end>

					<import keywords-only="yes" />					
	
					<import mode="CSS" state="Digits and Colors" keywords-only="yes" />
					<import mode="CSS" state="Attribute state" />
				</state>
       			
    			<import mode="CSS" state="Digits and Colors" keywords-only="yes" />
	   			<import keywords-only="yes" />
	
	   			<state-link state="Inside curly brackets" />
				
            </state>
			
			<keywords id="Pseudo" casesensitive="no" scope="language.operator">
				<string>active</string>
				<string>after</string>
				<string>before</string>
				<string>first-child</string>
				<string>first-letter</string>
				<string>first-line</string>
				<string>hover</string>
				<string>lang</string>
				<string>link</string>
				<string>visited</string>
			</keywords>
			
			<keywords id="CSS IDs" casesensitive="no" scope="support">
				<regex>(\#[A-z_\-]{4,}+)</regex>
			</keywords>
			
			<keywords id="CSS Classes" casesensitive="no" scope="language.function">
				<regex>(\.[A-z_\-]{4,}+)</regex>
			</keywords>

			<!--
			<state id="Interpolation" useforautocomplete="no" scope="meta.important">
				<begin>
					<string>#{</string>
				</begin>
				<end>
					<string>}</string>
				</end>
				
				
				<keywords id="Interpolate" useforautocomplete="no" scope="meta.important">
					<regex>(\$[\d\w-]+)</regex>
				</keywords>

			</state>
			-->
        <keywords id="Trailing Whitespace" scope="meta.invalid">
          <regex>\r?\n([ \t]+)\r?\n</regex>
          <regex>([ \t]+)\r?\n</regex>
        </keywords>
		</default>
	</states>
</syntax>
